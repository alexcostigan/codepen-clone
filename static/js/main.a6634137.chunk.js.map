{"version":3,"sources":["components/Editor.jsx","hooks/useLocalStorage.jsx","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","javascript","setJavascript","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAmDeA,EA1CA,SAACC,GAAW,IAGnBC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SANkB,EASGC,oBAAS,GATZ,mBASfC,EATe,KASTC,EATS,KActB,OACI,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC5C,yBAAKE,UAAU,gBACVN,EACD,4BACIO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAEpC,kBAAC,IAAD,CAAiBC,KAAQN,EAAOO,IAAgBC,QAGxD,kBAAC,aAAD,CACIC,eAhBZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAgBDA,MAASA,EACTK,UAAY,sBACZU,QAAW,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,OCzClB,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAFK,iBAEkBF,EAD0B,EAG7BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACAA,IAEAA,KAVwC,mBAGhDvB,EAHgD,KAGzC8B,EAHyC,KAkBvD,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAClD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GC6DJI,MA9Ef,WAAgB,IAAD,EAKTb,EAAgB,OAAQ,IALf,mBAGXc,EAHW,KAIXC,EAJW,OAUTf,EAAgB,MAAO,IAVd,mBAQXgB,EARW,KASXC,EATW,OAeTjB,EAAgB,aAAc,IAfrB,mBAaXkB,EAbW,KAcXC,EAdW,OAoBTtC,mBAAS,IApBA,mBAkBXuC,EAlBW,KAmBXC,EAnBW,KA0Cb,OApBAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,mDAAD,OAGDP,EAHC,+DAMDE,EANC,iEASDE,EATC,sDAaR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKlC,UAAU,mBACb,kBAAC,EAAD,CACEP,SAAW,MACXC,YAAc,OACdC,MAASmC,EACTlC,SAAYmC,IAEd,kBAAC,EAAD,CACEtC,SAAW,MACXC,YAAc,MACdC,MAASqC,EACTpC,SAAYqC,IAEd,kBAAC,EAAD,CACExC,SAAW,aACXC,YAAc,aACdC,MAASuC,EACTtC,SAAYuC,KAGhB,yBAAKnC,UAAU,SACb,4BACEoC,OAAUA,EACVK,MAAQ,SACRC,QAAU,gBACVC,YAAc,IACdC,MAAQ,OACRC,OAAS,Y,MCrEnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,W","file":"static/js/main.a6634137.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled } from 'react-codemirror2'\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt} from '@fortawesome/free-solid-svg-icons'\nconst Editor = (props) => {\n\n    const {\n        language,\n        displayName,\n        value,\n        onChange\n    } = props\n\n    const [open, setOpen ] = useState(true)\n    \n    function handleChange(editor, data, value) {\n        onChange(value)\n    }\n    return (\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n            <div className=\"editor-title\">\n                {displayName}\n                <button\n                    type=\"button\"\n                    className=\"expand-collapse-btn\"\n                    onClick={() => setOpen(prevOpen => !prevOpen)}\n                >\n                    <FontAwesomeIcon icon = {open ? faCompressAlt : faExpandAlt} />\n                </button>\n            </div>\n            <Controlled \n                onBeforeChange = {handleChange}\n                value = {value}\n                className = \"code-mirror-wrapper\"\n                options = {{\n                    lineWrapping: true,\n                    lint: true,\n                    mode: language,\n                    theme: 'material',\n                    lineNumbers: true\n                }}\n            />\n        </div>\n    )\n}\n\nexport default Editor\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\nexport default function useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key\n\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if (jsonValue != null) return JSON.parse(jsonValue)\n\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        } else {\n            return initialValue\n        }\n    })\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey, value])\n\n    return [value, setValue]\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './components/Editor'\nimport useLocalStorage from './hooks/useLocalStorage'\n\nfunction App() {\n\n  const [\n    html,\n    setHtml\n  ] = useLocalStorage('html', '')\n\n  const [\n    css,\n    setCss\n  ] = useLocalStorage('css', '')\n\n  const [\n    javascript,\n    setJavascript\n  ] = useLocalStorage('javascript', '')\n\n  const [\n    srcDoc,\n    setSrcDoc\n  ] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>\n            ${html}\n          </body>\n          <style>\n            ${css}\n          </style>\n          <script>\n            ${javascript}\n          </script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, javascript])\n\n  return (\n    <>\n      <div className=\"panel top-panel\">\n        <Editor \n          language = \"xml\"\n          displayName = \"HTML\"\n          value = {html}\n          onChange = {setHtml}\n        />\n        <Editor\n          language = \"css\"\n          displayName = \"CSS\"\n          value = {css}\n          onChange = {setCss}\n        />\n        <Editor \n          language = \"javascript\"\n          displayName = \"JAVASCRIPT\"\n          value = {javascript}\n          onChange = {setJavascript}\n          />\n      </div>\n      <div className=\"panel\">\n        <iframe\n          srcDoc = {srcDoc} \n          title = \"output\"\n          sandbox = \"allow-scripts\"\n          frameBorder = \"0\"\n          width = \"100%\"\n          height = \"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}